/*===TOKENS===*/
DS_FIXED                 <D>
NAME                     <VALFLD>
EXTERNAL_DESCRIPTION     < >
DATA_STRUCTURE_TYPE      < >
DEF_TYPE_S               <S >
FROM_POSITION            <       >
TO_POSITION              <      4>
DATA_TYPE                <a>
DECIMAL_POSITIONS        <  >
RESERVED                 < >
KEYWORD_INZ              <Inz>
'('                      <(>
BIF_BITNOT               <%bitnot>
'('                      <(>
ID                       <constfld>
')'                      <)>
')'                      <)>
EOL                      <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_EVAL                  <EVAL>
ID                       <val1>
'='                      <=>
BIF_BITNOT               <%BITNOT>
'('                      <(>
ID                       <HEXVAL>
')'                      <)>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_EVAL                  <EVAL>
ID                       <val2>
'='                      <=>
BIF_BITNOT               <%BITNOT>
'('                      <(>
HexLiteralStart          <x'>
StringContent            <800F0F>
StringLiteralEnd         <'>
')'                      <)>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_EVAL                  <EVAL>
ID                       <val3>
'='                      <=>
BIF_BITNOT               <%bitnot>
'('                      <(>
HexLiteralStart          <x'>
StringContent            <10>
StringLiteralEnd         <'>
')'                      <)>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_EVAL                  <EVAL>
ID                       <val4>
'='                      <=>
BIF_BITNOT               <%BItnot>
'('                      <(>
BIF_STR                  <%str>
'('                      <(>
ID                       <fld>
')'                      <)>
')'                      <)>
C_FREE_NEWLINE           <
>
DIRECTIVE                < />
DIR_FREE                 <free>
EOL                      <>
ID                       <val1>
'='                      <=>
BIF_BITNOT               <%bitnot>
'('                      <(>
ID                       <HEXVAL>
')'                      <)>
FREE_SEMI                <;>
HIDDEN:FE_COMMENTS       <//>
HIDDEN:COMMENTS_TEXT_HIDDEN< comment 1                                                      >
HIDDEN:COMMENTS_EOL_HIDDEN<
>
ID                       <val2>
'='                      <=>
BIF_BITNOT               <%BITNOT>
'('                      <(>
HexLiteralStart          <x'>
StringContent            <80>
StringLiteralEnd         <'>
')'                      <)>
FREE_SEMI                <;>
HIDDEN:FE_COMMENTS       <//>
HIDDEN:COMMENTS_TEXT_HIDDEN< comment 2                                                       >
HIDDEN:COMMENTS_EOL_HIDDEN<
>
ID                       <val3>
'='                      <=>
BIF_BITNOT               <%Bitnot>
'('                      <(>
ID                       <hexval>
')'                      <)>
FREE_SEMI                <;>
HIDDEN:FE_COMMENTS       <//>
HIDDEN:COMMENTS_TEXT_HIDDEN< comment 3                                                      >
HIDDEN:COMMENTS_EOL_HIDDEN<
>
ID                       <val4>
'='                      <=>
BIF_BITNOT               <%Bitnot>
'('                      <(>
BIF_STR                  <%str>
'('                      <(>
ID                       <fld>
')'                      <)>
')'                      <)>
FREE_SEMI                <;>
HIDDEN:FE_COMMENTS       <//>
HIDDEN:COMMENTS_TEXT_HIDDEN< comment 4                                                   >
HIDDEN:COMMENTS_EOL_HIDDEN<
>
DIRECTIVE                < />
DIR_ENDFREE              <end-free>
EOL                      <>
HIDDEN:EMPTY_LINE        <                                                                           >
/*===TREE===*/
(r
  (statement
    (dspec
      D
      (ds_name VALFLD)
      ' '
      ' '
      'S '
      '       '
      '      4'
      a
      '  '
      ' '
      (keyword
        (keyword_inz
          Inz
          (
          (simpleExpression
            (bif
              (bif_bitnot
                %bitnot
                (
                (expression (identifier (free_identifier (idOrKeyword constfld))))
                )
              )
            )
          )
          )
        )
      )
      NL
    )
  )
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csEVAL
          EVAL
          (c_free
            (expression
              (expression (identifier (free_identifier (idOrKeyword val1))))
              =
              (expression
                (bif
                  (bif_bitnot
                    %BITNOT
                    (
                    (expression (identifier (free_identifier (idOrKeyword HEXVAL))))
                    )
                  )
                )
              )
            )
          )
          NL
        )
      )
    )
  )
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csEVAL
          EVAL
          (c_free
            (expression
              (expression (identifier (free_identifier (idOrKeyword val2))))
              =
              (expression (bif (bif_bitnot %BITNOT ( (expression (literal x' 800F0F ')) ))))
            )
          )
          NL
        )
      )
    )
  )
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csEVAL
          EVAL
          (c_free
            (expression
              (expression (identifier (free_identifier (idOrKeyword val3))))
              =
              (expression (bif (bif_bitnot %bitnot ( (expression (literal x' 10 ')) ))))
            )
          )
          NL
        )
      )
    )
  )
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csEVAL
          EVAL
          (c_free
            (expression
              (expression (identifier (free_identifier (idOrKeyword val4))))
              =
              (expression
                (bif
                  (bif_bitnot
                    %BItnot
                    (
                    (expression
                      (bif
                        (bif_str
                          %str
                          (
                          (expression (identifier (free_identifier (idOrKeyword fld))))
                          )
                        )
                      )
                    )
                    )
                  )
                )
              )
            )
          )
          NL
        )
      )
    )
  )
  (statement (directive ' /' (beginfree_directive free) ))
  (statement
    (free
      (baseExpression
        (op
          (op_eval
            (evalExpression
              (assignmentExpression
                (simpleExpression (identifier (free_identifier (idOrKeyword val1))))
                =
                (expression
                  (bif
                    (bif_bitnot
                      %bitnot
                      (
                      (expression (identifier (free_identifier (idOrKeyword HEXVAL))))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (op
          (op_eval
            (evalExpression
              (assignmentExpression
                (simpleExpression (identifier (free_identifier (idOrKeyword val2))))
                =
                (expression (bif (bif_bitnot %BITNOT ( (expression (literal x' 80 ')) ))))
              )
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (op
          (op_eval
            (evalExpression
              (assignmentExpression
                (simpleExpression (identifier (free_identifier (idOrKeyword val3))))
                =
                (expression
                  (bif
                    (bif_bitnot
                      %Bitnot
                      (
                      (expression (identifier (free_identifier (idOrKeyword hexval))))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (op
          (op_eval
            (evalExpression
              (assignmentExpression
                (simpleExpression (identifier (free_identifier (idOrKeyword val4))))
                =
                (expression
                  (bif
                    (bif_bitnot
                      %Bitnot
                      (
                      (expression
                        (bif
                          (bif_str
                            %str
                            (
                            (expression (identifier (free_identifier (idOrKeyword fld))))
                            )
                          )
                        )
                      )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      ;
    )
  )
  (statement (directive ' /' (endfree_directive end-free) ))
)
/*======*/