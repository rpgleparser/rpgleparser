/*===TOKENS===*/
HIDDEN:COMMENT_SPEC_FIXED<C*>
HIDDEN:COMMENTS_TEXT     <0N01Factor1+++++++Opcode(E)+Factor2+++++++Result++++++++Len++D+HiLoEq....>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
SPLAT_ENTRY              <*Entry>
OP_PLIST                 <PList>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
HIDDEN:COMMENT_SPEC_FIXED< *>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_DOU                   <DOU>
SPLAT_INDICATOR          <*IN01>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ENDDO                 <ENDDO>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_DOU                   <DOU>
SPLAT_INDICATOR          <*IN01>
'='                      <=>
SPLAT_OFF                <*OFF>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ENDDO                 <ENDDO>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_DOU                   <DOU>
'('                      <(>
CS_OperationAndExtender  <m>
')'                      <)>
SPLAT_INDICATOR          <*IN01>
'='                      <=>
SPLAT_OFF                <*OFF>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ENDDO                 <ENDDO>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_DOU                   <dou>
SPLAT_INDICATOR          <*IN01>
'='                      <=>
SPLAT_OFF                <*OFF>
OR                       <or>
'('                      <(>
ID                       <fld2>
'>'                      <>>
ID                       <fld3>
')'                      <)>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_END                   <end>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
DIRECTIVE                < />
DIR_FREE                 <Free>
EOL                      <>
OP_DOU                   <DOU>
ID                       <*inkc>
FREE_SEMI                <;>
OP_ENDDO                 <ENDDO>
FREE_SEMI                <;>
OP_DOU                   <dou>
SPLAT_INDICATOR          <*in01>
OR                       <or>
'('                      <(>
ID                       <fld2>
'>'                      <>>
ID                       <fld3>
')'                      <)>
FREE_SEMI                <;>
OP_ENDDO                 <enddo>
FREE_SEMI                <;>
OP_DOU                   <Dou>
ID                       <*inkc>
'='                      <=>
SPLAT_OFF                <*off>
FREE_SEMI                <;>
OP_ENDDO                 <Enddo>
FREE_SEMI                <;>
OP_DOU                   <dou>
'('                      <(>
CS_OperationAndExtender  <r>
')'                      <)>
ID                       <*inkc>
'='                      <=>
SPLAT_OFF                <*off>
FREE_SEMI                <;>
OP_ENDDO                 <Enddo>
FREE_SEMI                <;>
DIRECTIVE                < />
DIR_ENDFREE              <end-free>
EOL                      <>
HIDDEN:COMMENT_SPEC_FIXED< *>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_SETON                 <SETON>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
LastRecordIndicator      <LR>
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
/*===TREE===*/
(r
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor (symbolicConstants *Entry))
      (cspec_fixed_standard
        (csPLIST
          PList
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
      )
    )
  )
  (statement
    (block
      (begindou
        C
        (cs_controlLevel '  ')
        (onOffIndicatorsFlag ' ')
        (cs_indicators '  ')
        (factor '              ')
        (csDOU
          DOU
          (c_free (expression (identifier (all (symbolicConstants *IN01)))))
          NL
        )
      )
      (enddo
        C
        (cs_controlLevel '  ')
        (onOffIndicatorsFlag ' ')
        (cs_indicators '  ')
        (factor '              ')
        (csENDDO
          ENDDO
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
      )
    )
  )
  (statement
    (block
      (begindou
        C
        (cs_controlLevel '  ')
        (onOffIndicatorsFlag ' ')
        (cs_indicators '  ')
        (factor '              ')
        (csDOU
          DOU
          (c_free
            (expression
              (expression (identifier (all (symbolicConstants *IN01))))
              =
              (expression (identifier (all (symbolicConstants *OFF))))
            )
          )
          NL
        )
      )
      (enddo
        C
        (cs_controlLevel '  ')
        (onOffIndicatorsFlag ' ')
        (cs_indicators '  ')
        (factor '              ')
        (csENDDO
          ENDDO
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
      )
    )
  )
  (statement
    (block
      (begindou
        C
        (cs_controlLevel '  ')
        (onOffIndicatorsFlag ' ')
        (cs_indicators '  ')
        (factor '              ')
        (csDOU
          DOU
          (cs_operationExtender ( m ))
          (c_free
            (expression
              (expression (identifier (all (symbolicConstants *IN01))))
              =
              (expression (identifier (all (symbolicConstants *OFF))))
            )
          )
          NL
        )
      )
      (enddo
        C
        (cs_controlLevel '  ')
        (onOffIndicatorsFlag ' ')
        (cs_indicators '  ')
        (factor '              ')
        (csENDDO
          ENDDO
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
      )
    )
  )
  (statement
    (block
      (begindou
        C
        (cs_controlLevel '  ')
        (onOffIndicatorsFlag ' ')
        (cs_indicators '  ')
        (factor '              ')
        (csDOU
          dou
          (c_free
            (expression
              (expression
                (expression (identifier (all (symbolicConstants *IN01))))
                =
                (expression (identifier (all (symbolicConstants *OFF))))
              )
              or
              (expression
                (
                (expression
                  (expression (identifier (free_identifier (idOrKeyword fld2))))
                  (comparisonOperator >)
                  (expression (identifier (free_identifier (idOrKeyword fld3))))
                )
                )
              )
            )
          )
          NL
        )
      )
      (enddo
        C
        (cs_controlLevel '  ')
        (onOffIndicatorsFlag ' ')
        (cs_indicators '  ')
        (factor '              ')
        (csEND
          end
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
      )
    )
  )
  (statement (directive ' /' (beginfree_directive Free) ))
  (statement
    (block
      (begindou
        (op_dou
          DOU
          (indicator_expr
            (expression (identifier (free_identifier (idOrKeyword *inkc))))
          )
        )
        ;
      )
      (enddo (op_enddo ENDDO) ;)
    )
  )
  (statement
    (block
      (begindou
        (op_dou
          dou
          (indicator_expr
            (expression
              (expression (identifier (all (symbolicConstants *in01))))
              or
              (expression
                (
                (expression
                  (expression (identifier (free_identifier (idOrKeyword fld2))))
                  (comparisonOperator >)
                  (expression (identifier (free_identifier (idOrKeyword fld3))))
                )
                )
              )
            )
          )
        )
        ;
      )
      (enddo (op_enddo enddo) ;)
    )
  )
  (statement
    (block
      (begindou
        (op_dou
          Dou
          (indicator_expr
            (expression
              (expression (identifier (free_identifier (idOrKeyword *inkc))))
              =
              (expression (identifier (all (symbolicConstants *off))))
            )
          )
        )
        ;
      )
      (enddo (op_enddo Enddo) ;)
    )
  )
  (statement
    (block
      (begindou
        (op_dou
          dou
          (cs_operationExtender ( r ))
          (indicator_expr
            (expression
              (expression (identifier (free_identifier (idOrKeyword *inkc))))
              =
              (expression (identifier (all (symbolicConstants *off))))
            )
          )
        )
        ;
      )
      (enddo (op_enddo Enddo) ;)
    )
  )
  (statement (directive ' /' (endfree_directive end-free) ))
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csSETON
          SETON
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator LR)
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
      )
    )
  )
)
/*======*/