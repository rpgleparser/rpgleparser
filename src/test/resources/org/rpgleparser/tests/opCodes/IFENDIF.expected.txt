/*===TOKENS===*/
HIDDEN:COMMENT_SPEC_FIXED<C*>
HIDDEN:COMMENTS_TEXT     <0N01Factor1+++++++Opcode(E)+Factor2+++++++Result++++++++Len++D+HiLoEq....>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
SPLAT_ENTRY              <*Entry>
OP_PLIST                 <PList>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
HIDDEN:COMMENT_SPEC_FIXED< *>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_IF                    <IF>
ID                       <A>
'>'                      <>>
NUMBER                   <10>
AND                      <AND>
SPLAT_INDICATOR          <*IN20>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ELSE                  <ELSE>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ENDIF                 <ENDIF>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_IF                    <IF>
ID                       <A>
'>'                      <>>
NUMBER                   <10>
AND                      <AND>
ID                       <y>
'='                      <=>
NUMBER                   <5>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ELSEIF                <ELSEIF>
ID                       <B>
'<'                      <<>
NUMBER                   <5>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ELSE                  <ELSE>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ENDIF                 <ENDIF>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_IF                    <if>
'('                      <(>
CS_OperationAndExtender  <M>
')'                      <)>
ID                       <A>
'>'                      <>>
NUMBER                   <10>
AND                      <AND>
SPLAT_INDICATOR          <*IN(20)>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ELSEIF                <elseif>
ID                       <B>
'<'                      <<>
NUMBER                   <5>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ELSE                  <else>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_ENDIF                 <endif>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
DIRECTIVE                < />
DIR_FREE                 <Free>
EOL                      <>
OP_IF                    <if>
ID                       <a>
'>'                      <>>
NUMBER                   <10>
AND                      <and>
SPLAT_INDICATOR          <*in(30)>
FREE_SEMI                <;>
OP_ENDIF                 <endif>
FREE_SEMI                <;>
OP_IF                    <IF>
ID                       <B>
'<'                      <<>
BIF_LEN                  <%len>
'('                      <(>
ID                       <str>
')'                      <)>
OR                       <or>
ID                       <c>
'='                      <=>
NUMBER                   <5>
FREE_SEMI                <;>
OP_ELSEIF                <elseif>
ID                       <keypress>
'='                      <=>
ID                       <exitkey>
FREE_SEMI                <;>
OP_ELSE                  <else>
FREE_SEMI                <;>
OP_ENDIF                 <endif>
FREE_SEMI                <;>
OP_IF                    <if>
'('                      <(>
CS_OperationAndExtender  <m>
')'                      <)>
ID                       <a>
'>'                      <>>
NUMBER                   <5>
FREE_SEMI                <;>
OP_ELSEIF                <elseif>
'('                      <(>
CS_OperationAndExtender  <r>
')'                      <)>
ID                       <b>
'='                      <=>
NUMBER                   <4>
FREE_SEMI                <;>
OP_ENDIF                 <endif>
FREE_SEMI                <;>
DIRECTIVE                < />
DIR_ENDFREE              <end-free>
EOL                      <>
HIDDEN:COMMENT_SPEC_FIXED< *>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
'              '         <              >
OP_SETON                 <SETON>
'              '         <              >
'              '         <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
LastRecordIndicator      <LR>
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
/*===TREE===*/
(r
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor (symbolicConstants *Entry))
      (cspec_fixed_standard
        (csPLIST
          PList
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
      )
    )
  )
  (statement
    (block
      (ifstatement
        (beginif
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          IF
          (c_free
            (expression
              (expression
                (expression (identifier (free_identifier (idOrKeyword A))))
                (comparisonOperator >)
                (expression (number 10))
              )
              AND
              (expression (identifier (all (symbolicConstants *IN20))))
            )
          )
          NL
        )
        (elsestmt
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          ELSE
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
        (endif
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          (csENDIF
            ENDIF
            (cspec_fixed_standard_parts
              (factor '              ')
              (resultType '              ')
              '     '
              '  '
              (resultIndicator '  ')
              (resultIndicator '  ')
              (resultIndicator '  ')
              NL
            )
          )
        )
      )
    )
  )
  (statement
    (block
      (ifstatement
        (beginif
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          IF
          (c_free
            (expression
              (expression
                (expression (identifier (free_identifier (idOrKeyword A))))
                (comparisonOperator >)
                (expression (number 10))
              )
              AND
              (expression
                (expression (identifier (free_identifier (idOrKeyword y))))
                =
                (expression (number 5))
              )
            )
          )
          NL
        )
        (elseifstmt
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          ELSEIF
          (c_free
            (expression
              (expression (identifier (free_identifier (idOrKeyword B))))
              (comparisonOperator <)
              (expression (number 5))
            )
          )
          NL
        )
        (elsestmt
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          ELSE
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
        (endif
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          (csENDIF
            ENDIF
            (cspec_fixed_standard_parts
              (factor '              ')
              (resultType '              ')
              '     '
              '  '
              (resultIndicator '  ')
              (resultIndicator '  ')
              (resultIndicator '  ')
              NL
            )
          )
        )
      )
    )
  )
  (statement
    (block
      (ifstatement
        (beginif
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          if
          (cs_operationExtender ( M ))
          (c_free
            (expression
              (expression
                (expression (identifier (free_identifier (idOrKeyword A))))
                (comparisonOperator >)
                (expression (number 10))
              )
              AND
              (expression (identifier (all (symbolicConstants *IN(20)))))
            )
          )
          NL
        )
        (elseifstmt
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          elseif
          (c_free
            (expression
              (expression (identifier (free_identifier (idOrKeyword B))))
              (comparisonOperator <)
              (expression (number 5))
            )
          )
          NL
        )
        (elsestmt
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          else
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
        (endif
          C
          (cs_controlLevel '  ')
          (onOffIndicatorsFlag ' ')
          (cs_indicators '  ')
          (factor '              ')
          (csENDIF
            endif
            (cspec_fixed_standard_parts
              (factor '              ')
              (resultType '              ')
              '     '
              '  '
              (resultIndicator '  ')
              (resultIndicator '  ')
              (resultIndicator '  ')
              NL
            )
          )
        )
      )
    )
  )
  (statement (directive ' /' (beginfree_directive Free) ))
  (statement
    (block
      (ifstatement
        (beginif
          (op_if
            if
            (expression
              (expression
                (expression (identifier (free_identifier (idOrKeyword a))))
                (comparisonOperator >)
                (expression (number 10))
              )
              and
              (expression (identifier (all (symbolicConstants *in(30)))))
            )
          )
          ;
        )
        (endif (op_endif endif) ;)
      )
    )
  )
  (statement
    (block
      (ifstatement
        (beginif
          (op_if
            IF
            (expression
              (expression
                (expression (identifier (free_identifier (idOrKeyword B))))
                (comparisonOperator <)
                (expression
                  (bif
                    (bif_len
                      %len
                      (
                      (expression (identifier (free_identifier (idOrKeyword str))))
                      )
                    )
                  )
                )
              )
              or
              (expression
                (expression (identifier (free_identifier (idOrKeyword c))))
                =
                (expression (number 5))
              )
            )
          )
          ;
        )
        (elseifstmt
          (op_elseif
            elseif
            (indicator_expr
              (expression
                (expression (identifier (free_identifier (idOrKeyword keypress))))
                =
                (expression (identifier (free_identifier (idOrKeyword exitkey))))
              )
            )
          )
          ;
        )
        (elsestmt (op_else else) ;)
        (endif (op_endif endif) ;)
      )
    )
  )
  (statement
    (block
      (ifstatement
        (beginif
          (op_if
            if
            (cs_operationExtender ( m ))
            (expression
              (expression (identifier (free_identifier (idOrKeyword a))))
              (comparisonOperator >)
              (expression (number 5))
            )
          )
          ;
        )
        (elseifstmt
          (op_elseif
            elseif
            (cs_operationExtender ( r ))
            (indicator_expr
              (expression
                (expression (identifier (free_identifier (idOrKeyword b))))
                =
                (expression (number 4))
              )
            )
          )
          ;
        )
        (endif (op_endif endif) ;)
      )
    )
  )
  (statement (directive ' /' (endfree_directive end-free) ))
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csSETON
          SETON
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator LR)
            (resultIndicator '  ')
            (resultIndicator '  ')
            NL
          )
        )
      )
    )
  )
)
/*======*/